// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Data.Models;

public partial class agremiaciong11Context : DbContext
{
    public agremiaciong11Context(DbContextOptions<agremiaciong11Context> options)
        : base(options)
    {
    }

    public virtual DbSet<Cobranza> Cobranza { get; set; }

    public virtual DbSet<EstadoPago> EstadoPago { get; set; }

    public virtual DbSet<Factura> Factura { get; set; }

    public virtual DbSet<ObraSocial> ObraSocial { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Cobranza>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("Cobranza_pkey");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Fecha).HasColumnName("fecha");
            entity.Property(e => e.IdFactura).HasColumnName("idFactura");
            entity.Property(e => e.Monto).HasColumnName("monto");
            entity.Property(e => e.Numero)
                .ValueGeneratedOnAdd()
                .HasColumnName("numero");

            entity.HasOne(d => d.Factura).WithMany(p => p.Cobranza)
                .HasForeignKey(d => d.IdFactura)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("Cobranza_idFactura_fkey");
        });

        modelBuilder.Entity<EstadoPago>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("EstadoPago_pkey");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Descripcion)
                .IsRequired()
                .HasColumnType("character varying")
                .HasColumnName("descripcion");
        });

        modelBuilder.Entity<Factura>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("Factura_pkey");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Fecha).HasColumnName("fecha");
            entity.Property(e => e.FechaVencimiento).HasColumnName("fechaVencimiento");
            entity.Property(e => e.IdEstadoPago).HasColumnName("idEstadoPago");
            entity.Property(e => e.IdObraSocial).HasColumnName("idObraSocial");
            entity.Property(e => e.ImporteTotal).HasColumnName("importeTotal");
            entity.Property(e => e.Numero)
                .ValueGeneratedOnAdd()
                .HasColumnName("numero");

            entity.HasOne(d => d.EstadoPago).WithMany(p => p.Factura)
                .HasForeignKey(d => d.IdEstadoPago)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("Factura_idEstadoPago_fkey");

            entity.HasOne(d => d.ObraSocial).WithMany(p => p.Factura)
                .HasForeignKey(d => d.IdObraSocial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("Factura_idObraSocial_fkey");
        });

        modelBuilder.Entity<ObraSocial>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("id");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasColumnType("character varying")
                .HasColumnName("nombre");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}